『ふつうのLinuxプログラミング』サンプルコード
=============================================

このディレクトリには『ふつうのLinuxプログラミング』の
サンプルコード (+ α) が収録されています。


必要環境
--------

プログラムをビルドするには gcc と GNU make が必要です。
ほとんどのプログラムは以下のすべての環境で動作しますが、
一部は Linux 専用です。

  * Linux 2.6.9 / i686 / gcc 3.4.2
  * Linux 2.4.22 / i686 / gcc 3.4.3
  * Linux 2.4.22 / i686 / gcc 3.2.3
  * Linux 2.4.22 / i686 / gcc 2.95.3
  * Linux 2.4.19 / i686 / gcc 2.95.4
  * Linux 2.2.19 / Alpha EV56 / gcc 2.95.4
  * Tru64UNIX 5.1B / Alpha EV6 / gcc 3.4.3
  * Solaris 9 / SPARCv9 / gcc 3.2.2
  * AIX 5.1 / POWER2 / gcc 3.3.2


使いかた
--------

このディレクトリに cd し、コマンドラインで make コマンドを
実行するとすべてのプログラムをビルドできます。make test で
テストを実行します。


ファイル解説
------------

  * align.c
    コンパイラのアラインメント機能を確認するコード。

  * args.c
    コマンドライン引数を表示するプログラム。

  * array.c
    文字列と文字の配列が等しいことを確認するコード。

  * bell.c
    端末のベルを鳴らす。

  * cat.c
    簡単な cat コマンド (システムコール版)

  * cat0.c
    cat.c からエラー処理を取り除いたコード

  * cat2.c
    簡単な cat コマンド (stdio 版)

  * cat3.c
    問題 5-1 の解答例。
    コマンドライン引数がないときは stdin を読む cat。

  * cat-escape.c
    問題 6-1 の解答例。
    タブを「\t」、改行を「$」+ 改行で表示する cat

  * cat4.c
    問題 7-1 の解答例。
    -e オプションで cat-escape.c と同じ効果を発揮する
    cat コマンド。

  * catdir.c
    opendir(3) に頼らずディレクトリを読むコマンド。
    ./catdir . | strings とするとなんとなく ls っぽい表示ができる。
    なぜか Tru64UNIX や Solaris にも対応している。

  * chgrp.c
    簡単な chgrp コマンド。chgrp(2) の使用例。

  * chmod.c
    簡単な chmod コマンド。chmod(2) の使用例。

  * chown.c
    簡単な chown コマンド。chown(2) と getpwnam(3) の使用例。

  * daytime.c
    daytime クライアント。

  * daytimed.c
    daytime サーバ。
    書籍で書いたのと同じ理由により IPv4 専用。

  * dupread.c
    dup(2) のテストプログラム。

  * echo.c
    簡単な echo コマンド。

  * env.c
    簡単な env コマンド。すべての環境変数を表示する。

  * eofbug.c
    feof() を使ったときに起こる有名なバグを確認するコード。
    このプログラムの標準入力にテキストファイルを流しこむと
    最後の行が 2 回表示される。

  * exec.c
    exec 族のテストコード。

  * gdb/*
    gdb のテストに使ったファイル。

  * getcperf.c
    fgetc() と getc() の速度を比較するためのプログラム。
    何もコマンドライン引数を付けないと getc() を使い、
    コマンドライン引数で「f」を渡すと fgetc() を使う。

  * getctty.c
    制御端末を得るコード。[環境依存]

  * grep.c
    書籍に登場した grep コマンド。

  * grep2.c
    問題 8-1 の解答例。
    -f オプションと -v オプションのついた grep。

  * grep3.c
    問題 8-2 の解答例。
    行長制限なしの grep。

  * head.c
    簡単 head コマンド。stdin のみ読む。

  * head2.c
    簡単な head コマンド。コマンドライン引数のファイルも読む。

  * head3.c
    簡単な head コマンド。
    getopt() でコマンドラインオプションを解析する。

  * head4.c
    簡単な head コマンド。
    getopt_long() でコマンドラインオプションを解析する。

  * hello.c
    ありがちな Hello, World!

  * httpd.c
    書籍にのっているお手軽 HTTP サーバ。
    stdin しか読めない。

  * httpd2.c
    書籍にのっているお手軽 HTTP サーバ。
    自分でデーモン化とソケット接続が可能。

  * id.c
    簡単な id コマンド。user.c も参照。

  * isatty.c
    stdin, stdout, stderr のそれぞれについて、
    端末かどうか判定する。

  * littlehttpd/*
    書籍で作った HTTP サーバのさらなる改良版。
    autoconf 化されている。

  * ln.c
    簡単な ln コマンド。

  * logging.c
    syslog(3) のテストプログラム。

  * ls.c
    簡単な ls コマンド。

  * mapwrite.c
    mmap(2) のテストプログラム。

  * memmon.c
    任意のメモリアドレスを読み取って表示するプログラム。

  * mkdir.c
    簡単な mkdir コマンド。

  * mv.c
    簡単な mv コマンド。

  * namemax.c
    ホスト名と関連変数を出力する。

  * progname.c
    argv[0] を書き換えるコード。

  * pwd.c
    簡単な pwd コマンド。定数を使う。

  * pwd2.c
    簡単な pwd コマンド。自分でバッファの長さを調節する。

  * pwd3.c
    簡単な pwd コマンド。GNU libc 特有の getcwd() の機能を使う。
    [Linux only]

  * make/*
    make と Makefile の例

  * rm.c
    簡単な rm コマンド。unlink(2) の使用例。

  * rmdir.c
    簡単な rmdir コマンド。rmdir(2) の使用例。

  * segv.c
    NULL ポインタを参照するだけのプログラム。
    確実に Segmentation fault を起こす。

  * sh1.c
    問題 12-1 の解答例。
    ごく簡単なシェル。

  * sh2.c
    問題 12-2 の解答例。
    パイプとリダイレクトを実装したシェル。

  * shlib/*
    共有ライブラリを作成する例 [Linux only]

  * show-vmmap.c
    メモリ配置を表示する [Linux only]

  * showenv.c
    getenv(3) のテストプログラム。
    コマンドライン引数で指定された環境変数の値を表示する。
    env.c も参照。

  * sig.c
    signal(2) のテストプログラム。SIGINT を待つだけ。

  * sigqueue-test.c
    シグナルがキューイングされるかテストするプログラム。
    Linux では、プログラムが起動したあとに素早く 5 回
    Ctrl-C を打っても (5 回シグナルを送っても) メッセー
    ジは 2 回しか表示されない。つまり残り 3 つは失われ
    たということ。

  * sizeof.c
    いろいろな型の sizeof を表示するプログラム

  * sleep.c
    簡単な sleep コマンド。sleep(3) の使用例。

  * spawn.c
    コマンドライン引数で渡されたコマンドを実行する。

  * stat.c
    コマンドライン引数で指定されたファイルの付帯情報を表示する。
    lstat(2) の使用例。

  * strftime.c
    strftime(3) のテストプログラム。

  * strto.c
    strtol(), strtoul() のテストプログラム。

  * symlink.c
    簡単な ln -s コマンド。symlink(2) の使用例。

  * tail.c
    問題 7-2 の解答例。
    簡単な tail コマンド。

  * timefmt.c
    時刻 API のテストプログラム。

  * times.c
    times(2) のテストプログラム。

  * touch.c
    簡単な touch コマンド。このコマンドは時刻を
    更新するだけで、ファイルを作る機能はない。

  * trap.c
    問題 13-1 の解答例。
    SIGINT (Ctrl-C による割り込み) を受けたらメッセージを
    出して終了する。

  * traverse.c
    問題 10-1 の解答例。
    コマンドライン引数で指定したディレクトリをトラバースして
    中にあるファイルを表示するプログラム。エラーメッセージまで
    find に似せたりするところが無駄に手がこんでいる。

  * unsignedchar.c
    unsigned char の挙動のテストプログラム。

  * user.c
    コマンドライン引数で指定したユーザのユーザ ID を表示する。
    getpwnam(3) の使用例。

  * wcl.c
    問題 6-2 の解答例。
    標準入力からテキストを読み込み、その行数を表示する。

  * wgrep.c
    wchar を使ってマルチバイト文字にも対応した grep コマンド。
    固定文字列しか検索できない。


章末問題と解答例の対照表
------------------------

  問題      解答例
  ========================
   5-1      cat3.c
   6-1      cat-escape.c
   6-2      wcl.c
   7-1      cat4.c
   7-2      tail.c
   8-1      grep2.c
   8-2      grep3.c
  10-1      traverse.c
  12-1      sh1.c
  12-2      sh2.c
  13-1      trap.c


ライセンス
----------

このディレクトリに含まれるソースコードはすべて青木峰郎が
著作権を保持しており、modified BSD style でライセンスします。
即ち、目的や対価の有無に関らず変更・再配布・他のプログラム
への組み込みなどを許可します。ただしこのプログラムを利用した
結果生じたトラブルなどについては、いかなる場合も著者ならびに
出版社は責任を負いかねます。


青木峰郎 / Minero Aoki <aamine@loveruby.net>
